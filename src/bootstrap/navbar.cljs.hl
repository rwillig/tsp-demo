(ns bootstrap.navbar
  (:refer-hoplon :exclude [nav header])
  (:require
    [bootstrap.core :as core]
    [bootstrap.meta :as meta]
    [clojure.string :as string]))

(defn get-hash [link]       (subs (.-href link) (.indexOf (.-href link) "#")))
(defn active?  [link route] (let [h (get-hash link)] (= h (subs route 0 (count h)))))

(defelem inverse  [attr kids] (apply (div :class "navbar navbar-inverse") attr kids))
(defelem header   [attr kids] (apply (div :class "navbar-header") attr kids))
(defelem collapse [attr kids] (apply (div :class "collapse navbar-collapse") attr kids))
(defelem nav      [attr kids] (apply (ul :class "nav navbar-nav") attr kids))
(defelem brand    [attr kids] (apply (a :class "navbar-brand") attr kids))

(defn fixed-top [route title-text & links]
  ((inverse :class "navbar-fixed-top")
     (core/container
       (header
          (brand :href (get-hash (first links)) title-text))
       (collapse
          (apply
            (nav)
            (map #(li :do-class (cell= {:active (active? % route)}) %) links))))))
